// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.11.4
// source: car-service.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Make  string `protobuf:"bytes,2,opt,name=make,proto3" json:"make,omitempty"`
	Model string `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	Vin   string `protobuf:"bytes,4,opt,name=vin,proto3" json:"vin,omitempty"`
}

func (x *CarRequest) Reset() {
	*x = CarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_car_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarRequest) ProtoMessage() {}

func (x *CarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_car_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarRequest.ProtoReflect.Descriptor instead.
func (*CarRequest) Descriptor() ([]byte, []int) {
	return file_car_service_proto_rawDescGZIP(), []int{0}
}

func (x *CarRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CarRequest) GetMake() string {
	if x != nil {
		return x.Make
	}
	return ""
}

func (x *CarRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *CarRequest) GetVin() string {
	if x != nil {
		return x.Vin
	}
	return ""
}

type Car struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Make  string `protobuf:"bytes,2,opt,name=make,proto3" json:"make,omitempty"`
	Model string `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	Vin   string `protobuf:"bytes,4,opt,name=vin,proto3" json:"vin,omitempty"`
}

func (x *Car) Reset() {
	*x = Car{}
	if protoimpl.UnsafeEnabled {
		mi := &file_car_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Car) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Car) ProtoMessage() {}

func (x *Car) ProtoReflect() protoreflect.Message {
	mi := &file_car_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Car.ProtoReflect.Descriptor instead.
func (*Car) Descriptor() ([]byte, []int) {
	return file_car_service_proto_rawDescGZIP(), []int{1}
}

func (x *Car) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Car) GetMake() string {
	if x != nil {
		return x.Make
	}
	return ""
}

func (x *Car) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Car) GetVin() string {
	if x != nil {
		return x.Vin
	}
	return ""
}

type CarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Car    *Car  `protobuf:"bytes,2,opt,name=car,proto3" json:"car,omitempty"`
}

func (x *CarResponse) Reset() {
	*x = CarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_car_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarResponse) ProtoMessage() {}

func (x *CarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_car_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarResponse.ProtoReflect.Descriptor instead.
func (*CarResponse) Descriptor() ([]byte, []int) {
	return file_car_service_proto_rawDescGZIP(), []int{2}
}

func (x *CarResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CarResponse) GetCar() *Car {
	if x != nil {
		return x.Car
	}
	return nil
}

type CarsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Cars   []*Car `protobuf:"bytes,2,rep,name=cars,proto3" json:"cars,omitempty"`
}

func (x *CarsResponse) Reset() {
	*x = CarsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_car_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarsResponse) ProtoMessage() {}

func (x *CarsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_car_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarsResponse.ProtoReflect.Descriptor instead.
func (*CarsResponse) Descriptor() ([]byte, []int) {
	return file_car_service_proto_rawDescGZIP(), []int{3}
}

func (x *CarsResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CarsResponse) GetCars() []*Car {
	if x != nil {
		return x.Cars
	}
	return nil
}

type SimpleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SimpleResponse) Reset() {
	*x = SimpleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_car_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleResponse) ProtoMessage() {}

func (x *SimpleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_car_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleResponse.ProtoReflect.Descriptor instead.
func (*SimpleResponse) Descriptor() ([]byte, []int) {
	return file_car_service_proto_rawDescGZIP(), []int{4}
}

func (x *SimpleResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SimpleError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SimpleError) Reset() {
	*x = SimpleError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_car_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleError) ProtoMessage() {}

func (x *SimpleError) ProtoReflect() protoreflect.Message {
	mi := &file_car_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleError.ProtoReflect.Descriptor instead.
func (*SimpleError) Descriptor() ([]byte, []int) {
	return file_car_service_proto_rawDescGZIP(), []int{5}
}

func (x *SimpleError) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_car_service_proto protoreflect.FileDescriptor

var file_car_service_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x61, 0x72, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x58, 0x0a, 0x0a, 0x43, 0x61,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x6b, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x76, 0x69, 0x6e, 0x22, 0x51, 0x0a, 0x03, 0x43, 0x61, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x61, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x76, 0x69, 0x6e, 0x22, 0x43, 0x0a, 0x0b, 0x43, 0x61, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x03, 0x63, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x52, 0x03, 0x63, 0x61, 0x72, 0x22, 0x46, 0x0a, 0x0c,
	0x43, 0x61, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x52, 0x04,
	0x63, 0x61, 0x72, 0x73, 0x22, 0x28, 0x0a, 0x0e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x23,
	0x0a, 0x0b, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x32, 0xef, 0x02, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x43, 0x61, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x61, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x07, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x61, 0x72, 0x30, 0x01, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_car_service_proto_rawDescOnce sync.Once
	file_car_service_proto_rawDescData = file_car_service_proto_rawDesc
)

func file_car_service_proto_rawDescGZIP() []byte {
	file_car_service_proto_rawDescOnce.Do(func() {
		file_car_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_car_service_proto_rawDescData)
	})
	return file_car_service_proto_rawDescData
}

var file_car_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_car_service_proto_goTypes = []interface{}{
	(*CarRequest)(nil),     // 0: proto.CarRequest
	(*Car)(nil),            // 1: proto.Car
	(*CarResponse)(nil),    // 2: proto.CarResponse
	(*CarsResponse)(nil),   // 3: proto.CarsResponse
	(*SimpleResponse)(nil), // 4: proto.SimpleResponse
	(*SimpleError)(nil),    // 5: proto.SimpleError
}
var file_car_service_proto_depIdxs = []int32{
	1, // 0: proto.CarResponse.car:type_name -> proto.Car
	1, // 1: proto.CarsResponse.cars:type_name -> proto.Car
	0, // 2: proto.AddCarService.Create:input_type -> proto.CarRequest
	0, // 3: proto.AddCarService.GetById:input_type -> proto.CarRequest
	0, // 4: proto.AddCarService.GetAll:input_type -> proto.CarRequest
	0, // 5: proto.AddCarService.Replace:input_type -> proto.CarRequest
	0, // 6: proto.AddCarService.Update:input_type -> proto.CarRequest
	0, // 7: proto.AddCarService.Delete:input_type -> proto.CarRequest
	0, // 8: proto.AddCarService.Search:input_type -> proto.CarRequest
	4, // 9: proto.AddCarService.Create:output_type -> proto.SimpleResponse
	2, // 10: proto.AddCarService.GetById:output_type -> proto.CarResponse
	3, // 11: proto.AddCarService.GetAll:output_type -> proto.CarsResponse
	4, // 12: proto.AddCarService.Replace:output_type -> proto.SimpleResponse
	4, // 13: proto.AddCarService.Update:output_type -> proto.SimpleResponse
	4, // 14: proto.AddCarService.Delete:output_type -> proto.SimpleResponse
	1, // 15: proto.AddCarService.Search:output_type -> proto.Car
	9, // [9:16] is the sub-list for method output_type
	2, // [2:9] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_car_service_proto_init() }
func file_car_service_proto_init() {
	if File_car_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_car_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_car_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Car); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_car_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_car_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_car_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_car_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_car_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_car_service_proto_goTypes,
		DependencyIndexes: file_car_service_proto_depIdxs,
		MessageInfos:      file_car_service_proto_msgTypes,
	}.Build()
	File_car_service_proto = out.File
	file_car_service_proto_rawDesc = nil
	file_car_service_proto_goTypes = nil
	file_car_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AddCarServiceClient is the client API for AddCarService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AddCarServiceClient interface {
	Create(ctx context.Context, in *CarRequest, opts ...grpc.CallOption) (*SimpleResponse, error)
	GetById(ctx context.Context, in *CarRequest, opts ...grpc.CallOption) (*CarResponse, error)
	GetAll(ctx context.Context, in *CarRequest, opts ...grpc.CallOption) (*CarsResponse, error)
	Replace(ctx context.Context, in *CarRequest, opts ...grpc.CallOption) (*SimpleResponse, error)
	Update(ctx context.Context, in *CarRequest, opts ...grpc.CallOption) (*SimpleResponse, error)
	Delete(ctx context.Context, in *CarRequest, opts ...grpc.CallOption) (*SimpleResponse, error)
	Search(ctx context.Context, in *CarRequest, opts ...grpc.CallOption) (AddCarService_SearchClient, error)
}

type addCarServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAddCarServiceClient(cc grpc.ClientConnInterface) AddCarServiceClient {
	return &addCarServiceClient{cc}
}

func (c *addCarServiceClient) Create(ctx context.Context, in *CarRequest, opts ...grpc.CallOption) (*SimpleResponse, error) {
	out := new(SimpleResponse)
	err := c.cc.Invoke(ctx, "/proto.AddCarService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addCarServiceClient) GetById(ctx context.Context, in *CarRequest, opts ...grpc.CallOption) (*CarResponse, error) {
	out := new(CarResponse)
	err := c.cc.Invoke(ctx, "/proto.AddCarService/GetById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addCarServiceClient) GetAll(ctx context.Context, in *CarRequest, opts ...grpc.CallOption) (*CarsResponse, error) {
	out := new(CarsResponse)
	err := c.cc.Invoke(ctx, "/proto.AddCarService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addCarServiceClient) Replace(ctx context.Context, in *CarRequest, opts ...grpc.CallOption) (*SimpleResponse, error) {
	out := new(SimpleResponse)
	err := c.cc.Invoke(ctx, "/proto.AddCarService/Replace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addCarServiceClient) Update(ctx context.Context, in *CarRequest, opts ...grpc.CallOption) (*SimpleResponse, error) {
	out := new(SimpleResponse)
	err := c.cc.Invoke(ctx, "/proto.AddCarService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addCarServiceClient) Delete(ctx context.Context, in *CarRequest, opts ...grpc.CallOption) (*SimpleResponse, error) {
	out := new(SimpleResponse)
	err := c.cc.Invoke(ctx, "/proto.AddCarService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addCarServiceClient) Search(ctx context.Context, in *CarRequest, opts ...grpc.CallOption) (AddCarService_SearchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AddCarService_serviceDesc.Streams[0], "/proto.AddCarService/Search", opts...)
	if err != nil {
		return nil, err
	}
	x := &addCarServiceSearchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AddCarService_SearchClient interface {
	Recv() (*Car, error)
	grpc.ClientStream
}

type addCarServiceSearchClient struct {
	grpc.ClientStream
}

func (x *addCarServiceSearchClient) Recv() (*Car, error) {
	m := new(Car)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AddCarServiceServer is the server API for AddCarService service.
type AddCarServiceServer interface {
	Create(context.Context, *CarRequest) (*SimpleResponse, error)
	GetById(context.Context, *CarRequest) (*CarResponse, error)
	GetAll(context.Context, *CarRequest) (*CarsResponse, error)
	Replace(context.Context, *CarRequest) (*SimpleResponse, error)
	Update(context.Context, *CarRequest) (*SimpleResponse, error)
	Delete(context.Context, *CarRequest) (*SimpleResponse, error)
	Search(*CarRequest, AddCarService_SearchServer) error
}

// UnimplementedAddCarServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAddCarServiceServer struct {
}

func (*UnimplementedAddCarServiceServer) Create(context.Context, *CarRequest) (*SimpleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedAddCarServiceServer) GetById(context.Context, *CarRequest) (*CarResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetById not implemented")
}
func (*UnimplementedAddCarServiceServer) GetAll(context.Context, *CarRequest) (*CarsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedAddCarServiceServer) Replace(context.Context, *CarRequest) (*SimpleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Replace not implemented")
}
func (*UnimplementedAddCarServiceServer) Update(context.Context, *CarRequest) (*SimpleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedAddCarServiceServer) Delete(context.Context, *CarRequest) (*SimpleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedAddCarServiceServer) Search(*CarRequest, AddCarService_SearchServer) error {
	return status.Errorf(codes.Unimplemented, "method Search not implemented")
}

func RegisterAddCarServiceServer(s *grpc.Server, srv AddCarServiceServer) {
	s.RegisterService(&_AddCarService_serviceDesc, srv)
}

func _AddCarService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddCarServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddCarService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddCarServiceServer).Create(ctx, req.(*CarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddCarService_GetById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddCarServiceServer).GetById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddCarService/GetById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddCarServiceServer).GetById(ctx, req.(*CarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddCarService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddCarServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddCarService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddCarServiceServer).GetAll(ctx, req.(*CarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddCarService_Replace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddCarServiceServer).Replace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddCarService/Replace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddCarServiceServer).Replace(ctx, req.(*CarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddCarService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddCarServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddCarService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddCarServiceServer).Update(ctx, req.(*CarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddCarService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddCarServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddCarService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddCarServiceServer).Delete(ctx, req.(*CarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddCarService_Search_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CarRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AddCarServiceServer).Search(m, &addCarServiceSearchServer{stream})
}

type AddCarService_SearchServer interface {
	Send(*Car) error
	grpc.ServerStream
}

type addCarServiceSearchServer struct {
	grpc.ServerStream
}

func (x *addCarServiceSearchServer) Send(m *Car) error {
	return x.ServerStream.SendMsg(m)
}

var _AddCarService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.AddCarService",
	HandlerType: (*AddCarServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _AddCarService_Create_Handler,
		},
		{
			MethodName: "GetById",
			Handler:    _AddCarService_GetById_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _AddCarService_GetAll_Handler,
		},
		{
			MethodName: "Replace",
			Handler:    _AddCarService_Replace_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _AddCarService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _AddCarService_Delete_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Search",
			Handler:       _AddCarService_Search_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "car-service.proto",
}
